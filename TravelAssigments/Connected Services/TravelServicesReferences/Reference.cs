//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TravelAssigments.TravelServicesReferences {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/TravelServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TravelAssigments.TravelServicesReferences.Image[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TravelAssigments.TravelServicesReferences.Post[] PostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TravelAssigments.TravelServicesReferences.Image[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationAddress {
            get {
                return this.LocationAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationAddressField, value) != true)) {
                    this.LocationAddressField = value;
                    this.RaisePropertyChanged("LocationAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationDescription {
            get {
                return this.LocationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationDescriptionField, value) != true)) {
                    this.LocationDescriptionField = value;
                    this.RaisePropertyChanged("LocationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TravelAssigments.TravelServicesReferences.Post[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/TravelServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TravelAssigments.TravelServicesReferences.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageurlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TravelAssigments.TravelServicesReferences.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageurl {
            get {
                return this.imageurlField;
            }
            set {
                if ((object.ReferenceEquals(this.imageurlField, value) != true)) {
                    this.imageurlField = value;
                    this.RaisePropertyChanged("imageurl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/TravelServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TravelAssigments.TravelServicesReferences.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TravelAssigments.TravelServicesReferences.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PostDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TravelAssigments.TravelServicesReferences.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TravelAssigments.TravelServicesReferences.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PostDate {
            get {
                return this.PostDateField;
            }
            set {
                if ((this.PostDateField.Equals(value) != true)) {
                    this.PostDateField = value;
                    this.RaisePropertyChanged("PostDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/TravelServiceApplication")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CommentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TravelAssigments.TravelServicesReferences.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CommentDate {
            get {
                return this.CommentDateField;
            }
            set {
                if ((this.CommentDateField.Equals(value) != true)) {
                    this.CommentDateField = value;
                    this.RaisePropertyChanged("CommentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentInfo {
            get {
                return this.CommentInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentInfoField, value) != true)) {
                    this.CommentInfoField = value;
                    this.RaisePropertyChanged("CommentInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TravelAssigments.TravelServicesReferences.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostID {
            get {
                return this.PostIDField;
            }
            set {
                if ((this.PostIDField.Equals(value) != true)) {
                    this.PostIDField = value;
                    this.RaisePropertyChanged("PostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TravelServicesReferences.ITravelServices")]
    public interface ITravelServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetLocations", ReplyAction="http://tempuri.org/ITravelServices/GetLocationsResponse")]
        TravelAssigments.TravelServicesReferences.Location[] GetLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetLocations", ReplyAction="http://tempuri.org/ITravelServices/GetLocationsResponse")]
        System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Location[]> GetLocationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddLocation", ReplyAction="http://tempuri.org/ITravelServices/AddLocationResponse")]
        bool AddLocation(TravelAssigments.TravelServicesReferences.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddLocation", ReplyAction="http://tempuri.org/ITravelServices/AddLocationResponse")]
        System.Threading.Tasks.Task<bool> AddLocationAsync(TravelAssigments.TravelServicesReferences.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditLocation", ReplyAction="http://tempuri.org/ITravelServices/EditLocationResponse")]
        bool EditLocation(string id, TravelAssigments.TravelServicesReferences.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditLocation", ReplyAction="http://tempuri.org/ITravelServices/EditLocationResponse")]
        System.Threading.Tasks.Task<bool> EditLocationAsync(string id, TravelAssigments.TravelServicesReferences.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeleteLocation", ReplyAction="http://tempuri.org/ITravelServices/DeleteLocationResponse")]
        bool DeleteLocation(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeleteLocation", ReplyAction="http://tempuri.org/ITravelServices/DeleteLocationResponse")]
        System.Threading.Tasks.Task<bool> DeleteLocationAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetPosts", ReplyAction="http://tempuri.org/ITravelServices/GetPostsResponse")]
        TravelAssigments.TravelServicesReferences.Post[] GetPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetPosts", ReplyAction="http://tempuri.org/ITravelServices/GetPostsResponse")]
        System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Post[]> GetPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddPost", ReplyAction="http://tempuri.org/ITravelServices/AddPostResponse")]
        bool AddPost(TravelAssigments.TravelServicesReferences.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddPost", ReplyAction="http://tempuri.org/ITravelServices/AddPostResponse")]
        System.Threading.Tasks.Task<bool> AddPostAsync(TravelAssigments.TravelServicesReferences.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditPost", ReplyAction="http://tempuri.org/ITravelServices/EditPostResponse")]
        bool EditPost(string id, TravelAssigments.TravelServicesReferences.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditPost", ReplyAction="http://tempuri.org/ITravelServices/EditPostResponse")]
        System.Threading.Tasks.Task<bool> EditPostAsync(string id, TravelAssigments.TravelServicesReferences.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeletePost", ReplyAction="http://tempuri.org/ITravelServices/DeletePostResponse")]
        bool DeletePost(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeletePost", ReplyAction="http://tempuri.org/ITravelServices/DeletePostResponse")]
        System.Threading.Tasks.Task<bool> DeletePostAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetComments", ReplyAction="http://tempuri.org/ITravelServices/GetCommentsResponse")]
        TravelAssigments.TravelServicesReferences.Comment[] GetComments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetComments", ReplyAction="http://tempuri.org/ITravelServices/GetCommentsResponse")]
        System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Comment[]> GetCommentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddComment", ReplyAction="http://tempuri.org/ITravelServices/AddCommentResponse")]
        bool AddComment(TravelAssigments.TravelServicesReferences.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddComment", ReplyAction="http://tempuri.org/ITravelServices/AddCommentResponse")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(TravelAssigments.TravelServicesReferences.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditComment", ReplyAction="http://tempuri.org/ITravelServices/EditCommentResponse")]
        bool EditComment(string id, TravelAssigments.TravelServicesReferences.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditComment", ReplyAction="http://tempuri.org/ITravelServices/EditCommentResponse")]
        System.Threading.Tasks.Task<bool> EditCommentAsync(string id, TravelAssigments.TravelServicesReferences.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeleteComment", ReplyAction="http://tempuri.org/ITravelServices/DeleteCommentResponse")]
        bool DeleteComment(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeleteComment", ReplyAction="http://tempuri.org/ITravelServices/DeleteCommentResponse")]
        System.Threading.Tasks.Task<bool> DeleteCommentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetImages", ReplyAction="http://tempuri.org/ITravelServices/GetImagesResponse")]
        TravelAssigments.TravelServicesReferences.Image[] GetImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/GetImages", ReplyAction="http://tempuri.org/ITravelServices/GetImagesResponse")]
        System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Image[]> GetImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddImage", ReplyAction="http://tempuri.org/ITravelServices/AddImageResponse")]
        bool AddImage(TravelAssigments.TravelServicesReferences.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/AddImage", ReplyAction="http://tempuri.org/ITravelServices/AddImageResponse")]
        System.Threading.Tasks.Task<bool> AddImageAsync(TravelAssigments.TravelServicesReferences.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditImage", ReplyAction="http://tempuri.org/ITravelServices/EditImageResponse")]
        bool EditImage(string id, TravelAssigments.TravelServicesReferences.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/EditImage", ReplyAction="http://tempuri.org/ITravelServices/EditImageResponse")]
        System.Threading.Tasks.Task<bool> EditImageAsync(string id, TravelAssigments.TravelServicesReferences.Image image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeleteImage", ReplyAction="http://tempuri.org/ITravelServices/DeleteImageResponse")]
        bool DeleteImage(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelServices/DeleteImage", ReplyAction="http://tempuri.org/ITravelServices/DeleteImageResponse")]
        System.Threading.Tasks.Task<bool> DeleteImageAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITravelServicesChannel : TravelAssigments.TravelServicesReferences.ITravelServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TravelServicesClient : System.ServiceModel.ClientBase<TravelAssigments.TravelServicesReferences.ITravelServices>, TravelAssigments.TravelServicesReferences.ITravelServices {
        
        public TravelServicesClient() {
        }
        
        public TravelServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TravelServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TravelAssigments.TravelServicesReferences.Location[] GetLocations() {
            return base.Channel.GetLocations();
        }
        
        public System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Location[]> GetLocationsAsync() {
            return base.Channel.GetLocationsAsync();
        }
        
        public bool AddLocation(TravelAssigments.TravelServicesReferences.Location location) {
            return base.Channel.AddLocation(location);
        }
        
        public System.Threading.Tasks.Task<bool> AddLocationAsync(TravelAssigments.TravelServicesReferences.Location location) {
            return base.Channel.AddLocationAsync(location);
        }
        
        public bool EditLocation(string id, TravelAssigments.TravelServicesReferences.Location location) {
            return base.Channel.EditLocation(id, location);
        }
        
        public System.Threading.Tasks.Task<bool> EditLocationAsync(string id, TravelAssigments.TravelServicesReferences.Location location) {
            return base.Channel.EditLocationAsync(id, location);
        }
        
        public bool DeleteLocation(string id) {
            return base.Channel.DeleteLocation(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLocationAsync(string id) {
            return base.Channel.DeleteLocationAsync(id);
        }
        
        public TravelAssigments.TravelServicesReferences.Post[] GetPosts() {
            return base.Channel.GetPosts();
        }
        
        public System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Post[]> GetPostsAsync() {
            return base.Channel.GetPostsAsync();
        }
        
        public bool AddPost(TravelAssigments.TravelServicesReferences.Post post) {
            return base.Channel.AddPost(post);
        }
        
        public System.Threading.Tasks.Task<bool> AddPostAsync(TravelAssigments.TravelServicesReferences.Post post) {
            return base.Channel.AddPostAsync(post);
        }
        
        public bool EditPost(string id, TravelAssigments.TravelServicesReferences.Post post) {
            return base.Channel.EditPost(id, post);
        }
        
        public System.Threading.Tasks.Task<bool> EditPostAsync(string id, TravelAssigments.TravelServicesReferences.Post post) {
            return base.Channel.EditPostAsync(id, post);
        }
        
        public bool DeletePost(string id) {
            return base.Channel.DeletePost(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePostAsync(string id) {
            return base.Channel.DeletePostAsync(id);
        }
        
        public TravelAssigments.TravelServicesReferences.Comment[] GetComments() {
            return base.Channel.GetComments();
        }
        
        public System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Comment[]> GetCommentsAsync() {
            return base.Channel.GetCommentsAsync();
        }
        
        public bool AddComment(TravelAssigments.TravelServicesReferences.Comment comment) {
            return base.Channel.AddComment(comment);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(TravelAssigments.TravelServicesReferences.Comment comment) {
            return base.Channel.AddCommentAsync(comment);
        }
        
        public bool EditComment(string id, TravelAssigments.TravelServicesReferences.Comment comment) {
            return base.Channel.EditComment(id, comment);
        }
        
        public System.Threading.Tasks.Task<bool> EditCommentAsync(string id, TravelAssigments.TravelServicesReferences.Comment comment) {
            return base.Channel.EditCommentAsync(id, comment);
        }
        
        public bool DeleteComment(string id) {
            return base.Channel.DeleteComment(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCommentAsync(string id) {
            return base.Channel.DeleteCommentAsync(id);
        }
        
        public TravelAssigments.TravelServicesReferences.Image[] GetImages() {
            return base.Channel.GetImages();
        }
        
        public System.Threading.Tasks.Task<TravelAssigments.TravelServicesReferences.Image[]> GetImagesAsync() {
            return base.Channel.GetImagesAsync();
        }
        
        public bool AddImage(TravelAssigments.TravelServicesReferences.Image image) {
            return base.Channel.AddImage(image);
        }
        
        public System.Threading.Tasks.Task<bool> AddImageAsync(TravelAssigments.TravelServicesReferences.Image image) {
            return base.Channel.AddImageAsync(image);
        }
        
        public bool EditImage(string id, TravelAssigments.TravelServicesReferences.Image image) {
            return base.Channel.EditImage(id, image);
        }
        
        public System.Threading.Tasks.Task<bool> EditImageAsync(string id, TravelAssigments.TravelServicesReferences.Image image) {
            return base.Channel.EditImageAsync(id, image);
        }
        
        public bool DeleteImage(string id) {
            return base.Channel.DeleteImage(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteImageAsync(string id) {
            return base.Channel.DeleteImageAsync(id);
        }
    }
}
