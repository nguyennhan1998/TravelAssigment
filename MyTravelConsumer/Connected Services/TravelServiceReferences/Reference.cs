//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyTravelConsumer.TravelServiceReferences {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class Place : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Image[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Image[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceAddress {
            get {
                return this.PlaceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceAddressField, value) != true)) {
                    this.PlaceAddressField = value;
                    this.RaisePropertyChanged("PlaceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceInfo {
            get {
                return this.PlaceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceInfoField, value) != true)) {
                    this.PlaceInfoField = value;
                    this.RaisePropertyChanged("PlaceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceName {
            get {
                return this.PlaceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceNameField, value) != true)) {
                    this.PlaceNameField = value;
                    this.RaisePropertyChanged("PlaceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUser", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class AspNetUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessFailedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUserClaim[] AspNetUserClaimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUserLogin[] AspNetUserLoginsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUserRole[] AspNetUserRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Image[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockoutEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockoutEndDateUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhoneNumberConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Place[] PlacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TwoFactorEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessFailedCount {
            get {
                return this.AccessFailedCountField;
            }
            set {
                if ((this.AccessFailedCountField.Equals(value) != true)) {
                    this.AccessFailedCountField = value;
                    this.RaisePropertyChanged("AccessFailedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUserClaim[] AspNetUserClaims {
            get {
                return this.AspNetUserClaimsField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserClaimsField, value) != true)) {
                    this.AspNetUserClaimsField = value;
                    this.RaisePropertyChanged("AspNetUserClaims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUserLogin[] AspNetUserLogins {
            get {
                return this.AspNetUserLoginsField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserLoginsField, value) != true)) {
                    this.AspNetUserLoginsField = value;
                    this.RaisePropertyChanged("AspNetUserLogins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUserRole[] AspNetUserRoles {
            get {
                return this.AspNetUserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserRolesField, value) != true)) {
                    this.AspNetUserRolesField = value;
                    this.RaisePropertyChanged("AspNetUserRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Image[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockoutEnabled {
            get {
                return this.LockoutEnabledField;
            }
            set {
                if ((this.LockoutEnabledField.Equals(value) != true)) {
                    this.LockoutEnabledField = value;
                    this.RaisePropertyChanged("LockoutEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockoutEndDateUtc {
            get {
                return this.LockoutEndDateUtcField;
            }
            set {
                if ((this.LockoutEndDateUtcField.Equals(value) != true)) {
                    this.LockoutEndDateUtcField = value;
                    this.RaisePropertyChanged("LockoutEndDateUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhoneNumberConfirmed {
            get {
                return this.PhoneNumberConfirmedField;
            }
            set {
                if ((this.PhoneNumberConfirmedField.Equals(value) != true)) {
                    this.PhoneNumberConfirmedField = value;
                    this.RaisePropertyChanged("PhoneNumberConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Place[] Places {
            get {
                return this.PlacesField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacesField, value) != true)) {
                    this.PlacesField = value;
                    this.RaisePropertyChanged("Places");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityStamp {
            get {
                return this.SecurityStampField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityStampField, value) != true)) {
                    this.SecurityStampField = value;
                    this.RaisePropertyChanged("SecurityStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TwoFactorEnabled {
            get {
                return this.TwoFactorEnabledField;
            }
            set {
                if ((this.TwoFactorEnabledField.Equals(value) != true)) {
                    this.TwoFactorEnabledField = value;
                    this.RaisePropertyChanged("TwoFactorEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CommentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Place PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlaceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CommentDate {
            get {
                return this.CommentDateField;
            }
            set {
                if ((this.CommentDateField.Equals(value) != true)) {
                    this.CommentDateField = value;
                    this.RaisePropertyChanged("CommentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Place Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlaceID {
            get {
                return this.PlaceIDField;
            }
            set {
                if ((this.PlaceIDField.Equals(value) != true)) {
                    this.PlaceIDField = value;
                    this.RaisePropertyChanged("PlaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.Place PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlaceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.Place Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlaceID {
            get {
                return this.PlaceIDField;
            }
            set {
                if ((this.PlaceIDField.Equals(value) != true)) {
                    this.PlaceIDField = value;
                    this.RaisePropertyChanged("PlaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserClaim", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class AspNetUserClaim : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimValue {
            get {
                return this.ClaimValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimValueField, value) != true)) {
                    this.ClaimValueField = value;
                    this.RaisePropertyChanged("ClaimValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserLogin", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class AspNetUserLogin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginProvider {
            get {
                return this.LoginProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginProviderField, value) != true)) {
                    this.LoginProviderField = value;
                    this.RaisePropertyChanged("LoginProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderKey {
            get {
                return this.ProviderKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderKeyField, value) != true)) {
                    this.ProviderKeyField = value;
                    this.RaisePropertyChanged("ProviderKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserRole", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class AspNetUserRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetRole AspNetRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetRole AspNetRole {
            get {
                return this.AspNetRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetRoleField, value) != true)) {
                    this.AspNetRoleField = value;
                    this.RaisePropertyChanged("AspNetRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUser AspNetUser {
            get {
                return this.AspNetUserField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserField, value) != true)) {
                    this.AspNetUserField = value;
                    this.RaisePropertyChanged("AspNetUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIdField, value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetRole", Namespace="http://schemas.datacontract.org/2004/07/MyTravelServices")]
    [System.SerializableAttribute()]
    public partial class AspNetRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyTravelConsumer.TravelServiceReferences.AspNetUserRole[] AspNetUserRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyTravelConsumer.TravelServiceReferences.AspNetUserRole[] AspNetUserRoles {
            get {
                return this.AspNetUserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserRolesField, value) != true)) {
                    this.AspNetUserRolesField = value;
                    this.RaisePropertyChanged("AspNetUserRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TravelServiceReferences.ITravelService")]
    public interface ITravelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetPlaces", ReplyAction="http://tempuri.org/ITravelService/GetPlacesResponse")]
        MyTravelConsumer.TravelServiceReferences.Place[] GetPlaces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetPlaces", ReplyAction="http://tempuri.org/ITravelService/GetPlacesResponse")]
        System.Threading.Tasks.Task<MyTravelConsumer.TravelServiceReferences.Place[]> GetPlacesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/CreatePlace", ReplyAction="http://tempuri.org/ITravelService/CreatePlaceResponse")]
        bool CreatePlace(MyTravelConsumer.TravelServiceReferences.Place newPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/CreatePlace", ReplyAction="http://tempuri.org/ITravelService/CreatePlaceResponse")]
        System.Threading.Tasks.Task<bool> CreatePlaceAsync(MyTravelConsumer.TravelServiceReferences.Place newPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/EditPlace", ReplyAction="http://tempuri.org/ITravelService/EditPlaceResponse")]
        bool EditPlace(string id, MyTravelConsumer.TravelServiceReferences.Place newPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/EditPlace", ReplyAction="http://tempuri.org/ITravelService/EditPlaceResponse")]
        System.Threading.Tasks.Task<bool> EditPlaceAsync(string id, MyTravelConsumer.TravelServiceReferences.Place newPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/DeletePlace", ReplyAction="http://tempuri.org/ITravelService/DeletePlaceResponse")]
        bool DeletePlace(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/DeletePlace", ReplyAction="http://tempuri.org/ITravelService/DeletePlaceResponse")]
        System.Threading.Tasks.Task<bool> DeletePlaceAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetImages", ReplyAction="http://tempuri.org/ITravelService/GetImagesResponse")]
        MyTravelConsumer.TravelServiceReferences.Image[] GetImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetImages", ReplyAction="http://tempuri.org/ITravelService/GetImagesResponse")]
        System.Threading.Tasks.Task<MyTravelConsumer.TravelServiceReferences.Image[]> GetImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/CreateImage", ReplyAction="http://tempuri.org/ITravelService/CreateImageResponse")]
        bool CreateImage(MyTravelConsumer.TravelServiceReferences.Image newImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/CreateImage", ReplyAction="http://tempuri.org/ITravelService/CreateImageResponse")]
        System.Threading.Tasks.Task<bool> CreateImageAsync(MyTravelConsumer.TravelServiceReferences.Image newImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/EditImage", ReplyAction="http://tempuri.org/ITravelService/EditImageResponse")]
        bool EditImage(string id, MyTravelConsumer.TravelServiceReferences.Image newImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/EditImage", ReplyAction="http://tempuri.org/ITravelService/EditImageResponse")]
        System.Threading.Tasks.Task<bool> EditImageAsync(string id, MyTravelConsumer.TravelServiceReferences.Image newImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/DeleteImage", ReplyAction="http://tempuri.org/ITravelService/DeleteImageResponse")]
        bool DeleteImage(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/DeleteImage", ReplyAction="http://tempuri.org/ITravelService/DeleteImageResponse")]
        System.Threading.Tasks.Task<bool> DeleteImageAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetComments", ReplyAction="http://tempuri.org/ITravelService/GetCommentsResponse")]
        MyTravelConsumer.TravelServiceReferences.Comment[] GetComments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/GetComments", ReplyAction="http://tempuri.org/ITravelService/GetCommentsResponse")]
        System.Threading.Tasks.Task<MyTravelConsumer.TravelServiceReferences.Comment[]> GetCommentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/CreateComment", ReplyAction="http://tempuri.org/ITravelService/CreateCommentResponse")]
        bool CreateComment(MyTravelConsumer.TravelServiceReferences.Comment newComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/CreateComment", ReplyAction="http://tempuri.org/ITravelService/CreateCommentResponse")]
        System.Threading.Tasks.Task<bool> CreateCommentAsync(MyTravelConsumer.TravelServiceReferences.Comment newComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/EditComment", ReplyAction="http://tempuri.org/ITravelService/EditCommentResponse")]
        bool EditComment(string id, MyTravelConsumer.TravelServiceReferences.Comment newComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/EditComment", ReplyAction="http://tempuri.org/ITravelService/EditCommentResponse")]
        System.Threading.Tasks.Task<bool> EditCommentAsync(string id, MyTravelConsumer.TravelServiceReferences.Comment newComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/DeleteComment", ReplyAction="http://tempuri.org/ITravelService/DeleteCommentResponse")]
        bool DeleteComment(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITravelService/DeleteComment", ReplyAction="http://tempuri.org/ITravelService/DeleteCommentResponse")]
        System.Threading.Tasks.Task<bool> DeleteCommentAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITravelServiceChannel : MyTravelConsumer.TravelServiceReferences.ITravelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TravelServiceClient : System.ServiceModel.ClientBase<MyTravelConsumer.TravelServiceReferences.ITravelService>, MyTravelConsumer.TravelServiceReferences.ITravelService {
        
        public TravelServiceClient() {
        }
        
        public TravelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TravelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TravelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyTravelConsumer.TravelServiceReferences.Place[] GetPlaces() {
            return base.Channel.GetPlaces();
        }
        
        public System.Threading.Tasks.Task<MyTravelConsumer.TravelServiceReferences.Place[]> GetPlacesAsync() {
            return base.Channel.GetPlacesAsync();
        }
        
        public bool CreatePlace(MyTravelConsumer.TravelServiceReferences.Place newPlace) {
            return base.Channel.CreatePlace(newPlace);
        }
        
        public System.Threading.Tasks.Task<bool> CreatePlaceAsync(MyTravelConsumer.TravelServiceReferences.Place newPlace) {
            return base.Channel.CreatePlaceAsync(newPlace);
        }
        
        public bool EditPlace(string id, MyTravelConsumer.TravelServiceReferences.Place newPlace) {
            return base.Channel.EditPlace(id, newPlace);
        }
        
        public System.Threading.Tasks.Task<bool> EditPlaceAsync(string id, MyTravelConsumer.TravelServiceReferences.Place newPlace) {
            return base.Channel.EditPlaceAsync(id, newPlace);
        }
        
        public bool DeletePlace(string id) {
            return base.Channel.DeletePlace(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePlaceAsync(string id) {
            return base.Channel.DeletePlaceAsync(id);
        }
        
        public MyTravelConsumer.TravelServiceReferences.Image[] GetImages() {
            return base.Channel.GetImages();
        }
        
        public System.Threading.Tasks.Task<MyTravelConsumer.TravelServiceReferences.Image[]> GetImagesAsync() {
            return base.Channel.GetImagesAsync();
        }
        
        public bool CreateImage(MyTravelConsumer.TravelServiceReferences.Image newImage) {
            return base.Channel.CreateImage(newImage);
        }
        
        public System.Threading.Tasks.Task<bool> CreateImageAsync(MyTravelConsumer.TravelServiceReferences.Image newImage) {
            return base.Channel.CreateImageAsync(newImage);
        }
        
        public bool EditImage(string id, MyTravelConsumer.TravelServiceReferences.Image newImage) {
            return base.Channel.EditImage(id, newImage);
        }
        
        public System.Threading.Tasks.Task<bool> EditImageAsync(string id, MyTravelConsumer.TravelServiceReferences.Image newImage) {
            return base.Channel.EditImageAsync(id, newImage);
        }
        
        public bool DeleteImage(string id) {
            return base.Channel.DeleteImage(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteImageAsync(string id) {
            return base.Channel.DeleteImageAsync(id);
        }
        
        public MyTravelConsumer.TravelServiceReferences.Comment[] GetComments() {
            return base.Channel.GetComments();
        }
        
        public System.Threading.Tasks.Task<MyTravelConsumer.TravelServiceReferences.Comment[]> GetCommentsAsync() {
            return base.Channel.GetCommentsAsync();
        }
        
        public bool CreateComment(MyTravelConsumer.TravelServiceReferences.Comment newComment) {
            return base.Channel.CreateComment(newComment);
        }
        
        public System.Threading.Tasks.Task<bool> CreateCommentAsync(MyTravelConsumer.TravelServiceReferences.Comment newComment) {
            return base.Channel.CreateCommentAsync(newComment);
        }
        
        public bool EditComment(string id, MyTravelConsumer.TravelServiceReferences.Comment newComment) {
            return base.Channel.EditComment(id, newComment);
        }
        
        public System.Threading.Tasks.Task<bool> EditCommentAsync(string id, MyTravelConsumer.TravelServiceReferences.Comment newComment) {
            return base.Channel.EditCommentAsync(id, newComment);
        }
        
        public bool DeleteComment(string id) {
            return base.Channel.DeleteComment(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCommentAsync(string id) {
            return base.Channel.DeleteCommentAsync(id);
        }
    }
}
